@using FluentValidation

<div class="login">
    <h3>Log in</h3>

    <EditForm Model="Command" OnValidSubmit="() => Submit()">
        <FluentValidation.FluentValidator />
        <div class="field">
            <label for="Email">Email address</label>
            <InputText id="Email" type="text" @bind-Value="Command.Email" />
            <ValidationMessage For="() => Command.Email" />
        </div>
        <div class="field">
            <label for="Password">Password</label>
            <InputText id="Password" type="password" @bind-Value="Command.Password" />
            <ValidationMessage For="() => Command.Password" />
        </div>
        <input type="submit" />
    </EditForm>
</div>

@code {
    private RegisterUser.Command Command { get; set; } = new RegisterUser.Command();
    async void Submit() => await Mediator.Send(Command);
}
